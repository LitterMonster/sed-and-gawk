sed '{s/System Admnistrators/Desktop User/;N
s/System\nAdministrator/Desktop User/
}' data2

sed 'N; /System\nAdministrator/d' data2 #这会删除两行

sed 'N; /System\nAdministrator/D' data2 #这只会删除匹配的第一行

sed '/^$/{N; /header/D}' data3

sed -n 'N; /System\nAdministrator/P' data2

sed -n '/first/{
    h
    p
    n
    p
    g
    p
}' data2

sed -n '/header/!p' data4

sed '$!N; s/System.Administrator/Desktop User/' data4 
#这里$表示数据流中的最后一行文本，所以当sed编辑器到了最后一行时，他没有执行N
命令。但它对所有其他行都执行了这个命令。

sed -n '{1!G; h; $p}' data2 #将data2的文本倒叙输出，可以用实用程序tac

跳转:b
echo "This. is. a. test. to. remove. commands." | sed -n '{
    :start
    s/\.//p
    b start
}'

echo "This. is. a. test. to. remove. commands." | sed -n '{
    :start
    s/\.//p
    /\./b start
}'
#上例不会无限循环

测试:t
sed '{
    s/first/matched
    t
    s/This is the/No match on/
    }' data2

echo "This. is. a. test. to. remove. commands." | sed -n '{
    :start
    s/\.//p
    t start
}'

模式替换
echo "The cat sleeps in his hat." | sed 's/cat/"cat"'

and符号
echo "The hat sleeps in his hat." | sed 's/.at/"&"/g'
The ".at" sleeps in his ".at"

替换单独的单词
echo "The System Administrator manual" | sed '
s/\(System\) Administrator/\1 User/'

echo "The furry cat is pretty" | sed 's/furry \(.at\)/\1/'

echo "1234567" | sed '{
    :start
    s/\(.*[0-9]\)\([0-9]\{3\}\)/\1,\2/
    t
    start
}'

创建sed使用工具
sed 'G' data2 向文本文件的行间插入空白行(G命令会简单的将保持空间内容添加到模式空间内容后，
当启动sed编辑器时，保持空间只有一个空行。)

sed '/^$/d;$!G' data4
